!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BEV_ERROR	bufferevent.h	/^	BEV_ERROR = 2$/;"	e	enum:bufferevent_filter_result
BEV_EVENT_CONNECTED	bufferevent.h	103;"	d
BEV_EVENT_EOF	bufferevent.h	100;"	d
BEV_EVENT_ERROR	bufferevent.h	101;"	d
BEV_EVENT_READING	bufferevent.h	98;"	d
BEV_EVENT_TIMEOUT	bufferevent.h	102;"	d
BEV_EVENT_WRITING	bufferevent.h	99;"	d
BEV_FINISHED	bufferevent.h	/^	BEV_FINISHED = 2$/;"	e	enum:bufferevent_flush_mode
BEV_FLUSH	bufferevent.h	/^	BEV_FLUSH = 1,$/;"	e	enum:bufferevent_flush_mode
BEV_NEED_MORE	bufferevent.h	/^	BEV_NEED_MORE = 1,$/;"	e	enum:bufferevent_filter_result
BEV_NORMAL	bufferevent.h	/^	BEV_NORMAL = 0,$/;"	e	enum:bufferevent_flush_mode
BEV_OK	bufferevent.h	/^	BEV_OK = 0,$/;"	e	enum:bufferevent_filter_result
BEV_OPT_CLOSE_ON_FREE	bufferevent.h	/^	BEV_OPT_CLOSE_ON_FREE = (1<<0),$/;"	e	enum:bufferevent_options
BEV_OPT_DEFER_CALLBACKS	bufferevent.h	/^	BEV_OPT_DEFER_CALLBACKS = (1<<2),$/;"	e	enum:bufferevent_options
BEV_OPT_THREADSAFE	bufferevent.h	/^	BEV_OPT_THREADSAFE = (1<<1),$/;"	e	enum:bufferevent_options
BEV_OPT_UNLOCK_CALLBACKS	bufferevent.h	/^	BEV_OPT_UNLOCK_CALLBACKS = (1<<3)$/;"	e	enum:bufferevent_options
BUFFEREVENT_SSL_ACCEPTING	bufferevent_ssl.h	/^	BUFFEREVENT_SSL_ACCEPTING = 2$/;"	e	enum:bufferevent_ssl_state
BUFFEREVENT_SSL_CONNECTING	bufferevent_ssl.h	/^	BUFFEREVENT_SSL_CONNECTING = 1,$/;"	e	enum:bufferevent_ssl_state
BUFFEREVENT_SSL_OPEN	bufferevent_ssl.h	/^	BUFFEREVENT_SSL_OPEN = 0,$/;"	e	enum:bufferevent_ssl_state
DNS_ERR_CANCEL	dns.h	168;"	d
DNS_ERR_FORMAT	dns.h	148;"	d
DNS_ERR_NODATA	dns.h	172;"	d
DNS_ERR_NONE	dns.h	146;"	d
DNS_ERR_NOTEXIST	dns.h	153;"	d
DNS_ERR_NOTIMPL	dns.h	155;"	d
DNS_ERR_REFUSED	dns.h	158;"	d
DNS_ERR_SERVERFAILED	dns.h	151;"	d
DNS_ERR_SHUTDOWN	dns.h	166;"	d
DNS_ERR_TIMEOUT	dns.h	164;"	d
DNS_ERR_TRUNCATED	dns.h	160;"	d
DNS_ERR_UNKNOWN	dns.h	162;"	d
DNS_IPv4_A	dns.h	174;"	d
DNS_IPv6_AAAA	dns.h	176;"	d
DNS_NO_SEARCH	dns.h	187;"	d
DNS_OPTIONS_ALL	dns.h	184;"	d
DNS_OPTION_HOSTSFILE	dns.h	183;"	d
DNS_OPTION_MISC	dns.h	182;"	d
DNS_OPTION_NAMESERVERS	dns.h	181;"	d
DNS_OPTION_SEARCH	dns.h	180;"	d
DNS_PTR	dns.h	175;"	d
DNS_QUERY_NO_SEARCH	dns.h	178;"	d
EVBUFFER_CB_ENABLED	buffer.h	727;"	d
EVBUFFER_DATA	buffer_compat.h	107;"	d
EVBUFFER_EOF	bufferevent_compat.h	91;"	d
EVBUFFER_EOL_ANY	buffer.h	/^	EVBUFFER_EOL_ANY,$/;"	e	enum:evbuffer_eol_style
EVBUFFER_EOL_CRLF	buffer.h	/^	EVBUFFER_EOL_CRLF,$/;"	e	enum:evbuffer_eol_style
EVBUFFER_EOL_CRLF_STRICT	buffer.h	/^	EVBUFFER_EOL_CRLF_STRICT,$/;"	e	enum:evbuffer_eol_style
EVBUFFER_EOL_LF	buffer.h	/^	EVBUFFER_EOL_LF$/;"	e	enum:evbuffer_eol_style
EVBUFFER_ERROR	bufferevent_compat.h	92;"	d
EVBUFFER_FLAG_DRAINS_TO_FD	buffer.h	193;"	d
EVBUFFER_INPUT	bufferevent_compat.h	96;"	d
EVBUFFER_LENGTH	buffer_compat.h	105;"	d
EVBUFFER_OUTPUT	bufferevent_compat.h	98;"	d
EVBUFFER_PTR_ADD	buffer.h	/^	EVBUFFER_PTR_ADD$/;"	e	enum:evbuffer_ptr_how
EVBUFFER_PTR_SET	buffer.h	/^	EVBUFFER_PTR_SET,$/;"	e	enum:evbuffer_ptr_how
EVBUFFER_READ	bufferevent_compat.h	89;"	d
EVBUFFER_TIMEOUT	bufferevent_compat.h	93;"	d
EVBUFFER_WRITE	bufferevent_compat.h	90;"	d
EVDNS_ADDITIONAL_SECTION	dns.h	545;"	d
EVDNS_ANSWER_SECTION	dns.h	543;"	d
EVDNS_AUTHORITY_SECTION	dns.h	544;"	d
EVDNS_BASE_CONFIG_WINDOWS_NAMESERVERS_IMPLEMENTED	dns.h	455;"	d
EVDNS_CLASS_INET	dns.h	559;"	d
EVDNS_CONFIG_WINDOWS_NAMESERVERS_IMPLEMENTED	dns_compat.h	329;"	d
EVDNS_FLAGS_AA	dns.h	562;"	d
EVDNS_FLAGS_RD	dns.h	563;"	d
EVDNS_QTYPE_ALL	dns.h	557;"	d
EVDNS_QTYPE_AXFR	dns.h	556;"	d
EVDNS_TYPE_A	dns.h	547;"	d
EVDNS_TYPE_AAAA	dns.h	554;"	d
EVDNS_TYPE_CNAME	dns.h	549;"	d
EVDNS_TYPE_MX	dns.h	552;"	d
EVDNS_TYPE_NS	dns.h	548;"	d
EVDNS_TYPE_PTR	dns.h	551;"	d
EVDNS_TYPE_SOA	dns.h	550;"	d
EVDNS_TYPE_TXT	dns.h	553;"	d
EVENT_BASE_FLAG_EPOLL_USE_CHANGELIST	event.h	/^	EVENT_BASE_FLAG_EPOLL_USE_CHANGELIST = 0x10$/;"	e	enum:event_base_config_flag
EVENT_BASE_FLAG_IGNORE_ENV	event.h	/^	EVENT_BASE_FLAG_IGNORE_ENV = 0x02,$/;"	e	enum:event_base_config_flag
EVENT_BASE_FLAG_NOLOCK	event.h	/^	EVENT_BASE_FLAG_NOLOCK = 0x01,$/;"	e	enum:event_base_config_flag
EVENT_BASE_FLAG_NO_CACHE_TIME	event.h	/^	EVENT_BASE_FLAG_NO_CACHE_TIME = 0x08,$/;"	e	enum:event_base_config_flag
EVENT_BASE_FLAG_STARTUP_IOCP	event.h	/^	EVENT_BASE_FLAG_STARTUP_IOCP = 0x04,$/;"	e	enum:event_base_config_flag
EVENT_FD	event_compat.h	212;"	d
EVENT_LOG_DEBUG	event.h	566;"	d
EVENT_LOG_ERR	event.h	569;"	d
EVENT_LOG_MSG	event.h	567;"	d
EVENT_LOG_WARN	event.h	568;"	d
EVENT_MAX_PRIORITIES	event.h	1090;"	d
EVENT_SET_MEM_FUNCTIONS_IMPLEMENTED	event.h	1181;"	d
EVENT_SIGNAL	event_compat.h	213;"	d
EVHTTP_PROXY_REQUEST	http_struct.h	73;"	d
EVHTTP_REQUEST	http.h	/^enum evhttp_request_kind { EVHTTP_REQUEST, EVHTTP_RESPONSE };$/;"	e	enum:evhttp_request_kind
EVHTTP_REQ_CONNECT	http.h	/^	EVHTTP_REQ_CONNECT = 1 << 7,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_DEFER_FREE	http_struct.h	77;"	d
EVHTTP_REQ_DELETE	http.h	/^	EVHTTP_REQ_DELETE  = 1 << 4,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_GET	http.h	/^	EVHTTP_REQ_GET     = 1 << 0,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_HEAD	http.h	/^	EVHTTP_REQ_HEAD    = 1 << 2,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_NEEDS_FREE	http_struct.h	79;"	d
EVHTTP_REQ_OPTIONS	http.h	/^	EVHTTP_REQ_OPTIONS = 1 << 5,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_OWN_CONNECTION	http_struct.h	71;"	d
EVHTTP_REQ_PATCH	http.h	/^	EVHTTP_REQ_PATCH   = 1 << 8$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_POST	http.h	/^	EVHTTP_REQ_POST    = 1 << 1,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_PUT	http.h	/^	EVHTTP_REQ_PUT     = 1 << 3,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_TRACE	http.h	/^	EVHTTP_REQ_TRACE   = 1 << 6,$/;"	e	enum:evhttp_cmd_type
EVHTTP_RESPONSE	http.h	/^enum evhttp_request_kind { EVHTTP_REQUEST, EVHTTP_RESPONSE };$/;"	e	enum:evhttp_request_kind
EVHTTP_URI_NONCONFORMANT	http.h	830;"	d
EVHTTP_USER_OWNED	http_struct.h	75;"	d
EVLIST_ACTIVE	event_struct.h	60;"	d
EVLIST_ALL	event_struct.h	65;"	d
EVLIST_INIT	event_struct.h	62;"	d
EVLIST_INSERTED	event_struct.h	58;"	d
EVLIST_INTERNAL	event_struct.h	61;"	d
EVLIST_SIGNAL	event_struct.h	59;"	d
EVLIST_TIMEOUT	event_struct.h	57;"	d
EVLOOP_NONBLOCK	event.h	639;"	d
EVLOOP_ONCE	event.h	636;"	d
EVRPC_CONTINUE	rpc.h	/^	EVRPC_CONTINUE = 0,	\/**< continue processing the rpc *\/$/;"	e	enum:EVRPC_HOOK_RESULT
EVRPC_GENERATE	rpc.h	233;"	d
EVRPC_HEADER	rpc.h	172;"	d
EVRPC_HOOK_RESULT	rpc.h	/^enum EVRPC_HOOK_RESULT {$/;"	g
EVRPC_HOOK_TYPE	rpc.h	/^enum EVRPC_HOOK_TYPE {$/;"	g
EVRPC_INPUT	rpc.h	/^	EVRPC_INPUT,		\/**< apply the function to an input hook *\/$/;"	e	enum:EVRPC_HOOK_TYPE
EVRPC_MAKE_CTX	rpc.h	213;"	d
EVRPC_MAKE_REQUEST	rpc.h	374;"	d
EVRPC_OUTPUT	rpc.h	/^	EVRPC_OUTPUT		\/**< apply the function to an output hook *\/$/;"	e	enum:EVRPC_HOOK_TYPE
EVRPC_PAUSE	rpc.h	/^	EVRPC_PAUSE = 1		\/**< pause processing request until resumed *\/$/;"	e	enum:EVRPC_HOOK_RESULT
EVRPC_REGISTER	rpc.h	319;"	d
EVRPC_REQUEST_DONE	rpc.h	274;"	d
EVRPC_REQUEST_HTTP	rpc.h	257;"	d
EVRPC_STATUS_ERR_BADPAYLOAD	rpc_struct.h	47;"	d
EVRPC_STATUS_ERR_HOOKABORTED	rpc_struct.h	49;"	d
EVRPC_STATUS_ERR_NONE	rpc_struct.h	45;"	d
EVRPC_STATUS_ERR_TIMEOUT	rpc_struct.h	46;"	d
EVRPC_STATUS_ERR_UNSTARTED	rpc_struct.h	48;"	d
EVRPC_STRUCT	rpc.h	155;"	d
EVRPC_TERMINATE	rpc.h	/^	EVRPC_TERMINATE = -1,	\/**< indicates the rpc should be terminated *\/$/;"	e	enum:EVRPC_HOOK_RESULT
EVRPC_UNREGISTER	rpc.h	348;"	d
EVTAG_ADD	rpc_compat.h	46;"	d
EVTAG_ADD	rpc_compat.h	52;"	d
EVTAG_ARRAY_ADD	rpc.h	132;"	d
EVTAG_ARRAY_ADD_VALUE	rpc.h	127;"	d
EVTAG_ARRAY_GET	rpc.h	137;"	d
EVTAG_ARRAY_LEN	rpc.h	142;"	d
EVTAG_ASSIGN	rpc.h	88;"	d
EVTAG_ASSIGN	rpc_compat.h	44;"	d
EVTAG_ASSIGN	rpc_compat.h	48;"	d
EVTAG_ASSIGN_WITH_LEN	rpc.h	98;"	d
EVTAG_GET	rpc.h	108;"	d
EVTAG_GET	rpc_compat.h	45;"	d
EVTAG_GET	rpc_compat.h	50;"	d
EVTAG_GET_WITH_LEN	rpc.h	119;"	d
EVTAG_HAS	rpc.h	76;"	d
EVTAG_LEN	rpc_compat.h	55;"	d
EVTHREAD_CONDITION_API_VERSION	thread.h	129;"	d
EVTHREAD_LOCKTYPE_READWRITE	thread.h	86;"	d
EVTHREAD_LOCKTYPE_RECURSIVE	thread.h	83;"	d
EVTHREAD_LOCK_API_VERSION	thread.h	74;"	d
EVTHREAD_READ	thread.h	65;"	d
EVTHREAD_TRY	thread.h	69;"	d
EVTHREAD_USE_PTHREADS_IMPLEMENTED	thread.h	210;"	d
EVTHREAD_USE_WINDOWS_THREADS_IMPLEMENTED	thread.h	199;"	d
EVTHREAD_WRITE	thread.h	62;"	d
EVUTIL_AI_ADDRCONFIG	util.h	623;"	d
EVUTIL_AI_ADDRCONFIG	util.h	625;"	d
EVUTIL_AI_ALL	util.h	618;"	d
EVUTIL_AI_ALL	util.h	620;"	d
EVUTIL_AI_CANONNAME	util.h	598;"	d
EVUTIL_AI_CANONNAME	util.h	600;"	d
EVUTIL_AI_NUMERICHOST	util.h	603;"	d
EVUTIL_AI_NUMERICHOST	util.h	605;"	d
EVUTIL_AI_NUMERICSERV	util.h	608;"	d
EVUTIL_AI_NUMERICSERV	util.h	610;"	d
EVUTIL_AI_PASSIVE	util.h	593;"	d
EVUTIL_AI_PASSIVE	util.h	595;"	d
EVUTIL_AI_V4MAPPED	util.h	613;"	d
EVUTIL_AI_V4MAPPED	util.h	615;"	d
EVUTIL_CLOSESOCKET	util.h	324;"	d
EVUTIL_EAI_ADDRFAMILY	util.h	532;"	d
EVUTIL_EAI_ADDRFAMILY	util.h	534;"	d
EVUTIL_EAI_AGAIN	util.h	537;"	d
EVUTIL_EAI_AGAIN	util.h	539;"	d
EVUTIL_EAI_BADFLAGS	util.h	542;"	d
EVUTIL_EAI_BADFLAGS	util.h	544;"	d
EVUTIL_EAI_CANCEL	util.h	590;"	d
EVUTIL_EAI_FAIL	util.h	547;"	d
EVUTIL_EAI_FAIL	util.h	549;"	d
EVUTIL_EAI_FAMILY	util.h	552;"	d
EVUTIL_EAI_FAMILY	util.h	554;"	d
EVUTIL_EAI_MEMORY	util.h	557;"	d
EVUTIL_EAI_MEMORY	util.h	559;"	d
EVUTIL_EAI_NODATA	util.h	565;"	d
EVUTIL_EAI_NODATA	util.h	567;"	d
EVUTIL_EAI_NONAME	util.h	570;"	d
EVUTIL_EAI_NONAME	util.h	572;"	d
EVUTIL_EAI_SERVICE	util.h	575;"	d
EVUTIL_EAI_SERVICE	util.h	577;"	d
EVUTIL_EAI_SOCKTYPE	util.h	580;"	d
EVUTIL_EAI_SOCKTYPE	util.h	582;"	d
EVUTIL_EAI_SYSTEM	util.h	585;"	d
EVUTIL_EAI_SYSTEM	util.h	587;"	d
EVUTIL_SET_SOCKET_ERROR	util.h	331;"	d
EVUTIL_SET_SOCKET_ERROR	util.h	355;"	d
EVUTIL_SET_SOCKET_ERROR	util.h	363;"	d
EVUTIL_SOCKET_ERROR	util.h	329;"	d
EVUTIL_SOCKET_ERROR	util.h	353;"	d
EVUTIL_SOCKET_ERROR	util.h	362;"	d
EV_ET	event.h	746;"	d
EV_FEATURE_ET	event.h	/^    EV_FEATURE_ET = 0x01,$/;"	e	enum:event_method_feature
EV_FEATURE_FDS	event.h	/^    EV_FEATURE_FDS = 0x04$/;"	e	enum:event_method_feature
EV_FEATURE_O1	event.h	/^    EV_FEATURE_O1 = 0x02,$/;"	e	enum:event_method_feature
EV_INT16_MAX	util.h	225;"	d
EV_INT16_MIN	util.h	226;"	d
EV_INT32_MAX	util.h	222;"	d
EV_INT32_MIN	util.h	223;"	d
EV_INT64_MAX	util.h	219;"	d
EV_INT64_MIN	util.h	220;"	d
EV_INT8_MAX	util.h	228;"	d
EV_INT8_MIN	util.h	229;"	d
EV_PERSIST	event.h	744;"	d
EV_RATE_LIMIT_MAX	bufferevent.h	613;"	d
EV_READ	event.h	733;"	d
EV_SIGNAL	event.h	737;"	d
EV_SIZE_MAX	util.h	238;"	d
EV_SIZE_MAX	util.h	241;"	d
EV_SIZE_MAX	util.h	244;"	d
EV_SSIZE_MAX	util.h	239;"	d
EV_SSIZE_MAX	util.h	242;"	d
EV_SSIZE_MAX	util.h	245;"	d
EV_SSIZE_MIN	util.h	250;"	d
EV_TIMEOUT	event.h	731;"	d
EV_UINT16_MAX	util.h	224;"	d
EV_UINT32_MAX	util.h	221;"	d
EV_UINT64_MAX	util.h	218;"	d
EV_UINT8_MAX	util.h	227;"	d
EV_WRITE	event.h	735;"	d
HTTP_BADMETHOD	http.h	60;"	d
HTTP_BADREQUEST	http.h	58;"	d
HTTP_ENTITYTOOLARGE	http.h	61;"	d
HTTP_EXPECTATIONFAILED	http.h	62;"	d
HTTP_INTERNAL	http.h	63;"	d
HTTP_MOVEPERM	http.h	55;"	d
HTTP_MOVETEMP	http.h	56;"	d
HTTP_NOCONTENT	http.h	54;"	d
HTTP_NOTFOUND	http.h	59;"	d
HTTP_NOTIMPLEMENTED	http.h	64;"	d
HTTP_NOTMODIFIED	http.h	57;"	d
HTTP_OK	http.h	53;"	d
HTTP_SERVUNAVAIL	http.h	65;"	d
INPUT	rpc.h	460;"	d
LEV_OPT_CLOSE_ON_EXEC	listener.h	65;"	d
LEV_OPT_CLOSE_ON_FREE	listener.h	63;"	d
LEV_OPT_LEAVE_SOCKETS_BLOCKING	listener.h	60;"	d
LEV_OPT_REUSEABLE	listener.h	68;"	d
LEV_OPT_THREADSAFE	listener.h	71;"	d
LIBEVENT_VERSION	event.h	1084;"	d
LIBEVENT_VERSION_NUMBER	event.h	1087;"	d
OUTPUT	rpc.h	463;"	d
TAILQ_ENTRY	event_struct.h	130;"	d
TAILQ_ENTRY	event_struct.h	70;"	d
TAILQ_ENTRY	keyvalq_struct.h	38;"	d
TAILQ_ENTRY	keyvalq_struct.h	69;"	d
TAILQ_HEAD	event_struct.h	134;"	d
TAILQ_HEAD	event_struct.h	79;"	d
TAILQ_HEAD	keyvalq_struct.h	47;"	d
TAILQ_HEAD	keyvalq_struct.h	73;"	d
_EVBUFFER_IOVEC_IS_NATIVE	buffer.h	127;"	d
_EVENT2_BUFFEREVENT_COMPAT_H_	bufferevent_compat.h	29;"	d
_EVENT2_BUFFEREVENT_H_	bufferevent.h	28;"	d
_EVENT2_BUFFEREVENT_SSL_H_	bufferevent_ssl.h	27;"	d
_EVENT2_BUFFEREVENT_STRUCT_H_	bufferevent_struct.h	28;"	d
_EVENT2_BUFFER_COMPAT_H_	buffer_compat.h	28;"	d
_EVENT2_BUFFER_H_	buffer.h	27;"	d
_EVENT2_DNS_COMPAT_H_	dns_compat.h	28;"	d
_EVENT2_DNS_H_	dns.h	136;"	d
_EVENT2_DNS_STRUCT_H_	dns_struct.h	28;"	d
_EVENT2_EVENT_COMPAT_H_	event_compat.h	28;"	d
_EVENT2_EVENT_CONFIG_H_	event-config.h	12;"	d
_EVENT2_EVENT_H_	event.h	28;"	d
_EVENT2_EVENT_KEYVALQ_STRUCT_H_	keyvalq_struct.h	28;"	d
_EVENT2_EVENT_STRUCT_H_	event_struct.h	28;"	d
_EVENT2_HTTP_COMPAT_H_	http_compat.h	28;"	d
_EVENT2_HTTP_H_	http.h	28;"	d
_EVENT2_HTTP_STRUCT_H_	http_struct.h	28;"	d
_EVENT2_LISTENER_H_	listener.h	28;"	d
_EVENT2_RPC_COMPAT_H_	rpc_compat.h	28;"	d
_EVENT2_RPC_H_	rpc.h	28;"	d
_EVENT2_RPC_STRUCT_H_	rpc_struct.h	28;"	d
_EVENT2_TAG_COMPAT_H_	tag_compat.h	28;"	d
_EVENT2_TAG_H_	tag.h	28;"	d
_EVENT2_THREAD_H_	thread.h	27;"	d
_EVENT2_UTIL_H_	util.h	27;"	d
_EVENT_DEFINED_TQENTRY	event_struct.h	69;"	d
_EVENT_DEFINED_TQENTRY	keyvalq_struct.h	37;"	d
_EVENT_DEFINED_TQHEAD	event_struct.h	78;"	d
_EVENT_DEFINED_TQHEAD	keyvalq_struct.h	46;"	d
_EVENT_HAVE_ARPA_INET_H	event-config.h	33;"	d
_EVENT_HAVE_CLOCK_GETTIME	event-config.h	36;"	d
_EVENT_HAVE_DECL_CTL_KERN	event-config.h	40;"	d
_EVENT_HAVE_DECL_KERN_ARND	event-config.h	44;"	d
_EVENT_HAVE_DECL_KERN_RANDOM	event-config.h	48;"	d
_EVENT_HAVE_DECL_RANDOM_UUID	event-config.h	52;"	d
_EVENT_HAVE_DLFCN_H	event-config.h	58;"	d
_EVENT_HAVE_EPOLL	event-config.h	61;"	d
_EVENT_HAVE_EPOLL_CTL	event-config.h	64;"	d
_EVENT_HAVE_EVENTFD	event-config.h	67;"	d
_EVENT_HAVE_FCNTL	event-config.h	73;"	d
_EVENT_HAVE_FCNTL_H	event-config.h	76;"	d
_EVENT_HAVE_FD_MASK	event-config.h	79;"	d
_EVENT_HAVE_GETADDRINFO	event-config.h	82;"	d
_EVENT_HAVE_GETEGID	event-config.h	85;"	d
_EVENT_HAVE_GETEUID	event-config.h	88;"	d
_EVENT_HAVE_GETNAMEINFO	event-config.h	103;"	d
_EVENT_HAVE_GETPROTOBYNUMBER	event-config.h	106;"	d
_EVENT_HAVE_GETTIMEOFDAY	event-config.h	112;"	d
_EVENT_HAVE_INET_ATON	event-config.h	115;"	d
_EVENT_HAVE_INET_NTOP	event-config.h	118;"	d
_EVENT_HAVE_INET_PTON	event-config.h	121;"	d
_EVENT_HAVE_INTTYPES_H	event-config.h	124;"	d
_EVENT_HAVE_LIBZ	event-config.h	133;"	d
_EVENT_HAVE_MEMORY_H	event-config.h	136;"	d
_EVENT_HAVE_MMAP	event-config.h	139;"	d
_EVENT_HAVE_NETDB_H	event-config.h	142;"	d
_EVENT_HAVE_NETINET_IN_H	event-config.h	148;"	d
_EVENT_HAVE_OPENSSL	event-config.h	151;"	d
_EVENT_HAVE_OPENSSL_BIO_H	event-config.h	154;"	d
_EVENT_HAVE_PIPE	event-config.h	157;"	d
_EVENT_HAVE_POLL	event-config.h	160;"	d
_EVENT_HAVE_POLL_H	event-config.h	163;"	d
_EVENT_HAVE_PTHREADS	event-config.h	175;"	d
_EVENT_HAVE_PUTENV	event-config.h	178;"	d
_EVENT_HAVE_SA_FAMILY_T	event-config.h	181;"	d
_EVENT_HAVE_SELECT	event-config.h	184;"	d
_EVENT_HAVE_SENDFILE	event-config.h	187;"	d
_EVENT_HAVE_SETENV	event-config.h	190;"	d
_EVENT_HAVE_SETFD	event-config.h	193;"	d
_EVENT_HAVE_SIGACTION	event-config.h	196;"	d
_EVENT_HAVE_SIGNAL	event-config.h	199;"	d
_EVENT_HAVE_SPLICE	event-config.h	202;"	d
_EVENT_HAVE_STDARG_H	event-config.h	205;"	d
_EVENT_HAVE_STDDEF_H	event-config.h	208;"	d
_EVENT_HAVE_STDINT_H	event-config.h	211;"	d
_EVENT_HAVE_STDLIB_H	event-config.h	214;"	d
_EVENT_HAVE_STRINGS_H	event-config.h	217;"	d
_EVENT_HAVE_STRING_H	event-config.h	220;"	d
_EVENT_HAVE_STRSEP	event-config.h	226;"	d
_EVENT_HAVE_STRTOK_R	event-config.h	229;"	d
_EVENT_HAVE_STRTOLL	event-config.h	232;"	d
_EVENT_HAVE_STRUCT_ADDRINFO	event-config.h	235;"	d
_EVENT_HAVE_STRUCT_IN6_ADDR	event-config.h	238;"	d
_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR16	event-config.h	241;"	d
_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR32	event-config.h	244;"	d
_EVENT_HAVE_STRUCT_SOCKADDR_IN6	event-config.h	247;"	d
_EVENT_HAVE_STRUCT_SOCKADDR_STORAGE	event-config.h	256;"	d
_EVENT_HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY	event-config.h	259;"	d
_EVENT_HAVE_SYSCTL	event-config.h	265;"	d
_EVENT_HAVE_SYS_EPOLL_H	event-config.h	271;"	d
_EVENT_HAVE_SYS_EVENTFD_H	event-config.h	274;"	d
_EVENT_HAVE_SYS_IOCTL_H	event-config.h	280;"	d
_EVENT_HAVE_SYS_MMAN_H	event-config.h	283;"	d
_EVENT_HAVE_SYS_PARAM_H	event-config.h	286;"	d
_EVENT_HAVE_SYS_QUEUE_H	event-config.h	289;"	d
_EVENT_HAVE_SYS_SELECT_H	event-config.h	292;"	d
_EVENT_HAVE_SYS_SENDFILE_H	event-config.h	295;"	d
_EVENT_HAVE_SYS_SOCKET_H	event-config.h	298;"	d
_EVENT_HAVE_SYS_STAT_H	event-config.h	301;"	d
_EVENT_HAVE_SYS_SYSCTL_H	event-config.h	304;"	d
_EVENT_HAVE_SYS_TIME_H	event-config.h	307;"	d
_EVENT_HAVE_SYS_TYPES_H	event-config.h	310;"	d
_EVENT_HAVE_SYS_UIO_H	event-config.h	313;"	d
_EVENT_HAVE_SYS_WAIT_H	event-config.h	316;"	d
_EVENT_HAVE_TAILQFOREACH	event-config.h	319;"	d
_EVENT_HAVE_TIMERADD	event-config.h	322;"	d
_EVENT_HAVE_TIMERCLEAR	event-config.h	325;"	d
_EVENT_HAVE_TIMERCMP	event-config.h	328;"	d
_EVENT_HAVE_TIMERISSET	event-config.h	331;"	d
_EVENT_HAVE_UINT16_T	event-config.h	334;"	d
_EVENT_HAVE_UINT32_T	event-config.h	337;"	d
_EVENT_HAVE_UINT64_T	event-config.h	340;"	d
_EVENT_HAVE_UINT8_T	event-config.h	343;"	d
_EVENT_HAVE_UINTPTR_T	event-config.h	346;"	d
_EVENT_HAVE_UMASK	event-config.h	349;"	d
_EVENT_HAVE_UNISTD_H	event-config.h	352;"	d
_EVENT_HAVE_UNSETENV	event-config.h	355;"	d
_EVENT_HAVE_VASPRINTF	event-config.h	358;"	d
_EVENT_HAVE_ZLIB_H	event-config.h	364;"	d
_EVENT_LOG_DEBUG	event.h	574;"	d
_EVENT_LOG_ERR	event.h	577;"	d
_EVENT_LOG_MSG	event.h	575;"	d
_EVENT_LOG_WARN	event.h	576;"	d
_EVENT_LT_OBJDIR	event-config.h	368;"	d
_EVENT_NUMERIC_VERSION	event-config.h	374;"	d
_EVENT_PACKAGE	event-config.h	377;"	d
_EVENT_PACKAGE_BUGREPORT	event-config.h	380;"	d
_EVENT_PACKAGE_NAME	event-config.h	383;"	d
_EVENT_PACKAGE_STRING	event-config.h	386;"	d
_EVENT_PACKAGE_TARNAME	event-config.h	389;"	d
_EVENT_PACKAGE_VERSION	event-config.h	392;"	d
_EVENT_SIZEOF_INT	event-config.h	399;"	d
_EVENT_SIZEOF_LONG	event-config.h	402;"	d
_EVENT_SIZEOF_LONG_LONG	event-config.h	405;"	d
_EVENT_SIZEOF_PTHREAD_T	event-config.h	408;"	d
_EVENT_SIZEOF_SHORT	event-config.h	411;"	d
_EVENT_SIZEOF_SIZE_T	event-config.h	414;"	d
_EVENT_SIZEOF_VOID_P	event-config.h	417;"	d
_EVENT_SIZEOF_VOID_P	util.h	74;"	d
_EVENT_STDC_HEADERS	event-config.h	420;"	d
_EVENT_TIME_WITH_SYS_TIME	event-config.h	423;"	d
_EVENT_VERSION	event-config.h	426;"	d
_GNU_SOURCE	util.h	61;"	d
_ev	event_struct.h	/^	} _ev;$/;"	m	struct:event	typeref:union:event::__anon3
_internal	buffer.h	/^	} _internal;$/;"	m	struct:evbuffer_ptr	typeref:struct:evbuffer_ptr::__anon1
ai_addr	util.h	/^	struct sockaddr  *ai_addr; \/* binary address *\/$/;"	m	struct:evutil_addrinfo	typeref:struct:evutil_addrinfo::sockaddr
ai_addrlen	util.h	/^	size_t  ai_addrlen;   \/* length of ai_addr *\/$/;"	m	struct:evutil_addrinfo
ai_canonname	util.h	/^	char   *ai_canonname; \/* canonical name for nodename *\/$/;"	m	struct:evutil_addrinfo
ai_family	util.h	/^	int     ai_family;    \/* PF_xxx *\/$/;"	m	struct:evutil_addrinfo
ai_flags	util.h	/^	int     ai_flags;     \/* AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST *\/$/;"	m	struct:evutil_addrinfo
ai_next	util.h	/^	struct evutil_addrinfo  *ai_next; \/* next structure in linked list *\/$/;"	m	struct:evutil_addrinfo	typeref:struct:evutil_addrinfo::evutil_addrinfo
ai_protocol	util.h	/^	int     ai_protocol;  \/* 0 or IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:evutil_addrinfo
ai_socktype	util.h	/^	int     ai_socktype;  \/* SOCK_xxx *\/$/;"	m	struct:evutil_addrinfo
alloc	thread.h	/^	void *(*alloc)(unsigned locktype);$/;"	m	struct:evthread_lock_callbacks
alloc_condition	thread.h	/^	void *(*alloc_condition)(unsigned condtype);$/;"	m	struct:evthread_condition_callbacks
base	rpc_struct.h	/^	struct evrpc_base *base;$/;"	m	struct:evrpc	typeref:struct:evrpc::evrpc_base
be_ops	bufferevent_struct.h	/^	const struct bufferevent_ops *be_ops;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::bufferevent_ops
body_size	http_struct.h	/^	size_t body_size;$/;"	m	struct:evhttp_request
bufferevent	bufferevent.h	/^struct bufferevent$/;"	s
bufferevent	bufferevent_struct.h	/^struct bufferevent {$/;"	s
bufferevent_data_cb	bufferevent.h	/^typedef void (*bufferevent_data_cb)(struct bufferevent *bev, void *ctx);$/;"	t
bufferevent_event_cb	bufferevent.h	/^typedef void (*bufferevent_event_cb)(struct bufferevent *bev, short what, void *ctx);$/;"	t
bufferevent_filter_cb	bufferevent.h	/^typedef enum bufferevent_filter_result (*bufferevent_filter_cb)($/;"	t	typeref:enum:bufferevent_filter_cb
bufferevent_filter_result	bufferevent.h	/^enum bufferevent_filter_result {$/;"	g
bufferevent_flush_mode	bufferevent.h	/^enum bufferevent_flush_mode {$/;"	g
bufferevent_options	bufferevent.h	/^enum bufferevent_options {$/;"	g
bufferevent_ssl_state	bufferevent_ssl.h	/^enum bufferevent_ssl_state {$/;"	g
cb	http_struct.h	/^	void (*cb)(struct evhttp_request *, void *);$/;"	m	struct:evhttp_request
cb	rpc_struct.h	/^	void (*cb)(struct evrpc_req_generic *, void *);$/;"	m	struct:evrpc
cb_arg	http_struct.h	/^	void *cb_arg;$/;"	m	struct:evhttp_request
cb_arg	rpc_struct.h	/^	void *cb_arg;$/;"	m	struct:evrpc
cbarg	bufferevent_struct.h	/^	void *cbarg;$/;"	m	struct:bufferevent
chain	buffer.h	/^		void *chain;$/;"	m	struct:evbuffer_ptr::__anon1
chunk_cb	http_struct.h	/^	void (*chunk_cb)(struct evhttp_request *, void *);$/;"	m	struct:evhttp_request
chunked	http_struct.h	/^	unsigned chunked:1,		\/* a chunked request *\/$/;"	m	struct:evhttp_request
condition_api_version	thread.h	/^	int condition_api_version;$/;"	m	struct:evthread_condition_callbacks
dns_question_class	dns_struct.h	/^	int dns_question_class;$/;"	m	struct:evdns_server_question
dns_question_class	dns_struct.h	70;"	d
enabled	bufferevent_struct.h	/^	short enabled;$/;"	m	struct:bufferevent
encode_int	tag_compat.h	45;"	d
encode_int64	tag_compat.h	46;"	d
error	rpc_struct.h	/^	int error;$/;"	m	struct:evrpc_status
errorcb	bufferevent_struct.h	/^	bufferevent_event_cb errorcb;$/;"	m	struct:bufferevent
ev_active_next	event_struct.h	/^	TAILQ_ENTRY(event) ev_active_next;$/;"	m	struct:event
ev_arg	event_struct.h	/^	void *ev_arg;$/;"	m	struct:event
ev_base	bufferevent_struct.h	/^	struct event_base *ev_base;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event_base
ev_base	event_struct.h	/^	struct event_base *ev_base;$/;"	m	struct:event	typeref:struct:event::event_base
ev_callback	event_struct.h	/^	void (*ev_callback)(evutil_socket_t, short, void *arg);$/;"	m	struct:event
ev_closure	event_struct.h	/^	ev_uint8_t ev_closure;$/;"	m	struct:event
ev_events	event_struct.h	/^	short ev_events;$/;"	m	struct:event
ev_fd	event_struct.h	/^	evutil_socket_t ev_fd;$/;"	m	struct:event
ev_flags	event_struct.h	/^	short ev_flags;$/;"	m	struct:event
ev_int16_t	util.h	146;"	d
ev_int16_t	util.h	149;"	d
ev_int16_t	util.h	152;"	d
ev_int16_t	util.h	155;"	d
ev_int16_t	util.h	158;"	d
ev_int32_t	util.h	127;"	d
ev_int32_t	util.h	130;"	d
ev_int32_t	util.h	133;"	d
ev_int32_t	util.h	136;"	d
ev_int32_t	util.h	139;"	d
ev_int64_t	util.h	108;"	d
ev_int64_t	util.h	111;"	d
ev_int64_t	util.h	114;"	d
ev_int64_t	util.h	117;"	d
ev_int64_t	util.h	120;"	d
ev_int8_t	util.h	165;"	d
ev_int8_t	util.h	168;"	d
ev_int8_t	util.h	171;"	d
ev_intptr_t	util.h	176;"	d
ev_intptr_t	util.h	179;"	d
ev_intptr_t	util.h	182;"	d
ev_intptr_t	util.h	185;"	d
ev_io	event_struct.h	/^		} ev_io;$/;"	m	union:event::__anon3	typeref:struct:event::__anon3::__anon4
ev_io_next	event_struct.h	/^			TAILQ_ENTRY(event) ev_io_next;$/;"	m	struct:event::__anon3::__anon4
ev_ncalls	event_struct.h	/^			short ev_ncalls;$/;"	m	struct:event::__anon3::__anon5
ev_next	event_struct.h	/^	TAILQ_ENTRY(event) ev_next;$/;"	m	struct:event
ev_next_with_common_timeout	event_struct.h	/^		TAILQ_ENTRY(event) ev_next_with_common_timeout;$/;"	m	union:event::__anon2
ev_off_t	util.h	197;"	d
ev_off_t	util.h	199;"	d
ev_pncalls	event_struct.h	/^			short *ev_pncalls;$/;"	m	struct:event::__anon3::__anon5
ev_pri	event_struct.h	/^	ev_uint8_t ev_pri;	\/* smaller numbers are higher priority *\/$/;"	m	struct:event
ev_read	bufferevent_struct.h	/^	struct event ev_read;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event
ev_res	event_struct.h	/^	short ev_res;		\/* result passed to event callback *\/$/;"	m	struct:event
ev_signal	event_struct.h	/^		} ev_signal;$/;"	m	union:event::__anon3	typeref:struct:event::__anon3::__anon5
ev_signal_next	event_struct.h	/^			TAILQ_ENTRY(event) ev_signal_next;$/;"	m	struct:event::__anon3::__anon5
ev_socklen_t	util.h	254;"	d
ev_socklen_t	util.h	256;"	d
ev_socklen_t	util.h	258;"	d
ev_ssize_t	util.h	191;"	d
ev_ssize_t	util.h	193;"	d
ev_timeout	event_struct.h	/^			struct timeval ev_timeout;$/;"	m	struct:event::__anon3::__anon4	typeref:struct:event::__anon3::__anon4::timeval
ev_timeout	event_struct.h	/^	struct timeval ev_timeout;$/;"	m	struct:event	typeref:struct:event::timeval
ev_timeout_pos	event_struct.h	/^	} ev_timeout_pos;$/;"	m	struct:event	typeref:union:event::__anon2
ev_uint16_t	util.h	145;"	d
ev_uint16_t	util.h	148;"	d
ev_uint16_t	util.h	151;"	d
ev_uint16_t	util.h	154;"	d
ev_uint16_t	util.h	157;"	d
ev_uint32_t	util.h	126;"	d
ev_uint32_t	util.h	129;"	d
ev_uint32_t	util.h	132;"	d
ev_uint32_t	util.h	135;"	d
ev_uint32_t	util.h	138;"	d
ev_uint64_t	util.h	107;"	d
ev_uint64_t	util.h	110;"	d
ev_uint64_t	util.h	113;"	d
ev_uint64_t	util.h	116;"	d
ev_uint64_t	util.h	119;"	d
ev_uint8_t	util.h	164;"	d
ev_uint8_t	util.h	167;"	d
ev_uint8_t	util.h	170;"	d
ev_uintptr_t	util.h	175;"	d
ev_uintptr_t	util.h	178;"	d
ev_uintptr_t	util.h	181;"	d
ev_uintptr_t	util.h	184;"	d
ev_write	bufferevent_struct.h	/^	struct event ev_write;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event
evbuffer	buffer.h	/^struct evbuffer$/;"	s
evbuffer_cb	buffer_compat.h	/^typedef void (*evbuffer_cb)(struct evbuffer *buffer, size_t old_len, size_t new_len, void *arg);$/;"	t
evbuffer_cb_func	buffer.h	/^typedef void (*evbuffer_cb_func)(struct evbuffer *buffer, const struct evbuffer_cb_info *info, void *arg);$/;"	t
evbuffer_cb_info	buffer.h	/^struct evbuffer_cb_info {$/;"	s
evbuffer_eol_style	buffer.h	/^enum evbuffer_eol_style {$/;"	g
evbuffer_iovec	buffer.h	/^struct evbuffer_iovec {$/;"	s
evbuffer_iovec	buffer.h	125;"	d
evbuffer_ptr	buffer.h	/^struct evbuffer_ptr {$/;"	s
evbuffer_ptr_how	buffer.h	/^enum evbuffer_ptr_how {$/;"	g
evbuffer_ref_cleanup_cb	buffer.h	/^typedef void (*evbuffer_ref_cleanup_cb)(const void *data,$/;"	t
evbuffercb	bufferevent_compat.h	31;"	d
evcon	http_struct.h	/^	struct evhttp_connection *evcon;$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evhttp_connection
evconnlistener_cb	listener.h	/^typedef void (*evconnlistener_cb)(struct evconnlistener *, evutil_socket_t, struct sockaddr *, int socklen, void *);$/;"	t
evconnlistener_errorcb	listener.h	/^typedef void (*evconnlistener_errorcb)(struct evconnlistener *, void *);$/;"	t
evdns_callback_type	dns.h	/^typedef void (*evdns_callback_type) (int result, char type, int count, int ttl, void *addresses, void *arg);$/;"	t
evdns_debug_log_fn_type	dns.h	/^typedef void (*evdns_debug_log_fn_type)(int is_warning, const char *msg);$/;"	t
evdns_getaddrinfo_cb	dns.h	/^typedef void (*evdns_getaddrinfo_cb)(int result, struct evutil_addrinfo *res, void *arg);$/;"	t
evdns_request_callback_fn_type	dns.h	/^typedef void (*evdns_request_callback_fn_type)(struct evdns_server_request *, void *);$/;"	t
evdns_server_question	dns_struct.h	/^struct evdns_server_question {$/;"	s
evdns_server_request	dns_struct.h	/^struct evdns_server_request {$/;"	s
event	event.h	/^struct event$/;"	s
event	event_struct.h	/^struct event {$/;"	s
event_base	event.h	/^struct event_base$/;"	s
event_base_config_flag	event.h	/^enum event_base_config_flag {$/;"	g
event_callback_fn	event.h	/^typedef void (*event_callback_fn)(evutil_socket_t, short, void *);$/;"	t
event_config	event.h	/^struct event_config$/;"	s
event_fatal_cb	event.h	/^typedef void (*event_fatal_cb)(int err);$/;"	t
event_get_signal	event.h	1005;"	d
event_log_cb	event.h	/^typedef void (*event_log_cb)(int severity, const char *msg);$/;"	t
event_method_feature	event.h	/^enum event_method_feature {$/;"	g
event_watermark	bufferevent_struct.h	/^struct event_watermark {$/;"	s
everrorcb	bufferevent_compat.h	32;"	d
evhttp_cmd_type	http.h	/^enum evhttp_cmd_type {$/;"	g
evhttp_request	http_struct.h	/^struct evhttp_request {$/;"	s
evhttp_request_kind	http.h	/^enum evhttp_request_kind { EVHTTP_REQUEST, EVHTTP_RESPONSE };$/;"	g
evhttp_request_uri	http_compat.h	84;"	d
evkeyval	keyvalq_struct.h	/^struct evkeyval {$/;"	s
evrpc	rpc_struct.h	/^struct evrpc {$/;"	s
evrpc_status	rpc_struct.h	/^struct evrpc_status {$/;"	s
evsignal_add	event.h	769;"	d
evsignal_assign	event.h	770;"	d
evsignal_del	event.h	774;"	d
evsignal_initialized	event.h	776;"	d
evsignal_new	event.h	772;"	d
evsignal_pending	event.h	775;"	d
evsignal_set	event_compat.h	177;"	d
evthread_condition_callbacks	thread.h	/^struct evthread_condition_callbacks {$/;"	s
evthread_lock_callbacks	thread.h	/^struct evthread_lock_callbacks {$/;"	s
evtimer_add	event.h	757;"	d
evtimer_assign	event.h	754;"	d
evtimer_del	event.h	758;"	d
evtimer_initialized	event.h	760;"	d
evtimer_new	event.h	756;"	d
evtimer_pending	event.h	759;"	d
evtimer_set	event_compat.h	176;"	d
evutil_addrinfo	util.h	/^struct evutil_addrinfo {$/;"	s
evutil_addrinfo	util.h	506;"	d
evutil_gettimeofday	util.h	435;"	d
evutil_offsetof	util.h	424;"	d
evutil_offsetof	util.h	426;"	d
evutil_socket_error_to_string	util.h	359;"	d
evutil_socket_error_to_string	util.h	366;"	d
evutil_socket_geterror	util.h	357;"	d
evutil_socket_geterror	util.h	365;"	d
evutil_socket_t	util.h	272;"	d
evutil_socket_t	util.h	274;"	d
evutil_timeradd	util.h	379;"	d
evutil_timeradd	util.h	382;"	d
evutil_timerclear	util.h	403;"	d
evutil_timerclear	util.h	405;"	d
evutil_timercmp	util.h	411;"	d
evutil_timerisset	util.h	417;"	d
evutil_timerisset	util.h	419;"	d
evutil_timersub	util.h	380;"	d
evutil_timersub	util.h	391;"	d
flags	dns_struct.h	/^	int flags;$/;"	m	struct:evdns_server_request
flags	http_struct.h	/^	int flags;$/;"	m	struct:evhttp_request
free	thread.h	/^	void (*free)(void *lock, unsigned locktype);$/;"	m	struct:evthread_lock_callbacks
free_condition	thread.h	/^	void (*free_condition)(void *cond);$/;"	m	struct:evthread_condition_callbacks
headers_size	http_struct.h	/^	size_t headers_size;$/;"	m	struct:evhttp_request
high	bufferevent_struct.h	/^	size_t high;$/;"	m	struct:event_watermark
host_cache	http_struct.h	/^	char *host_cache;$/;"	m	struct:evhttp_request
http_req	rpc_struct.h	/^	struct evhttp_request *http_req;$/;"	m	struct:evrpc_status	typeref:struct:evrpc_status::evhttp_request
input	bufferevent_struct.h	/^	struct evbuffer *input;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::evbuffer
input_buffer	http_struct.h	/^	struct evbuffer *input_buffer;	\/* read data *\/$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evbuffer
input_headers	http_struct.h	/^	struct evkeyvalq *input_headers;$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evkeyvalq
iov_base	buffer.h	/^	void *iov_base;$/;"	m	struct:evbuffer_iovec
iov_len	buffer.h	/^	size_t iov_len;$/;"	m	struct:evbuffer_iovec
key	keyvalq_struct.h	/^	char *key;$/;"	m	struct:evkeyval
kind	http_struct.h	/^	enum evhttp_request_kind kind;$/;"	m	struct:evhttp_request	typeref:enum:evhttp_request::evhttp_request_kind
lock	thread.h	/^	int (*lock)(unsigned mode, void *lock);$/;"	m	struct:evthread_lock_callbacks
lock_api_version	thread.h	/^	int lock_api_version;$/;"	m	struct:evthread_lock_callbacks
low	bufferevent_struct.h	/^	size_t low;$/;"	m	struct:event_watermark
major	http_struct.h	/^	char major;			\/* HTTP Major number *\/$/;"	m	struct:evhttp_request
min_heap_idx	event_struct.h	/^		int min_heap_idx;$/;"	m	union:event::__anon2
minor	http_struct.h	/^	char minor;			\/* HTTP Minor number *\/$/;"	m	struct:evhttp_request
n_added	buffer.h	/^	size_t n_added;$/;"	m	struct:evbuffer_cb_info
n_deleted	buffer.h	/^	size_t n_deleted;$/;"	m	struct:evbuffer_cb_info
name	dns_struct.h	/^	char name[1];$/;"	m	struct:evdns_server_question
next	http_struct.h	/^	TAILQ_ENTRY(evhttp_request) next;$/;"	m	struct:evhttp_request
next	keyvalq_struct.h	/^	TAILQ_ENTRY(evkeyval) next;$/;"	m	struct:evkeyval
next	rpc_struct.h	/^	TAILQ_ENTRY(evrpc) next;$/;"	m	struct:evrpc
nquestions	dns_struct.h	/^	int nquestions;$/;"	m	struct:evdns_server_request
ntoread	http_struct.h	/^	ev_int64_t ntoread;$/;"	m	struct:evhttp_request
orig_size	buffer.h	/^	size_t orig_size;$/;"	m	struct:evbuffer_cb_info
output	bufferevent_struct.h	/^	struct evbuffer *output;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::evbuffer
output_buffer	http_struct.h	/^	struct evbuffer *output_buffer;	\/* outgoing post or data *\/$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evbuffer
output_headers	http_struct.h	/^	struct evkeyvalq *output_headers;$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evkeyvalq
pos	buffer.h	/^	ev_ssize_t pos;$/;"	m	struct:evbuffer_ptr
pos_in_chain	buffer.h	/^		size_t pos_in_chain;$/;"	m	struct:evbuffer_ptr::__anon1
questions	dns_struct.h	/^	struct evdns_server_question **questions;$/;"	m	struct:evdns_server_request	typeref:struct:evdns_server_request::evdns_server_question
readcb	bufferevent_struct.h	/^	bufferevent_data_cb readcb;$/;"	m	struct:bufferevent
remote_host	http_struct.h	/^	char *remote_host;$/;"	m	struct:evhttp_request
remote_port	http_struct.h	/^	ev_uint16_t remote_port;$/;"	m	struct:evhttp_request
reply_complete	rpc_struct.h	/^	int (*reply_complete)(void *);$/;"	m	struct:evrpc
reply_free	rpc_struct.h	/^	void (*reply_free)(void *);$/;"	m	struct:evrpc
reply_marshal	rpc_struct.h	/^	void (*reply_marshal)(struct evbuffer*, void *);$/;"	m	struct:evrpc
reply_new	rpc_struct.h	/^	void *(*reply_new)(void *);$/;"	m	struct:evrpc
reply_new_arg	rpc_struct.h	/^	void *reply_new_arg;$/;"	m	struct:evrpc
request_free	rpc_struct.h	/^	void (*request_free)(void *);$/;"	m	struct:evrpc
request_new	rpc_struct.h	/^	void *(*request_new)(void *);$/;"	m	struct:evrpc
request_new_arg	rpc_struct.h	/^	void *request_new_arg;$/;"	m	struct:evrpc
request_unmarshal	rpc_struct.h	/^	int (*request_unmarshal)(void *, struct evbuffer *);$/;"	m	struct:evrpc
response_code	http_struct.h	/^	int response_code;		\/* HTTP Response code *\/$/;"	m	struct:evhttp_request
response_code_line	http_struct.h	/^	char *response_code_line;	\/* Readable response *\/$/;"	m	struct:evhttp_request
signal_add	event_compat.h	202;"	d
signal_condition	thread.h	/^	int (*signal_condition)(void *cond, int broadcast);$/;"	m	struct:evthread_condition_callbacks
signal_del	event_compat.h	205;"	d
signal_initialized	event_compat.h	207;"	d
signal_pending	event_compat.h	206;"	d
signal_set	event_compat.h	203;"	d
ss_family	util.h	264;"	d
supported_locktypes	thread.h	/^	unsigned supported_locktypes;$/;"	m	struct:evthread_lock_callbacks
timeout_add	event_compat.h	188;"	d
timeout_del	event_compat.h	190;"	d
timeout_initialized	event_compat.h	192;"	d
timeout_pending	event_compat.h	191;"	d
timeout_read	bufferevent_struct.h	/^	struct timeval timeout_read;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::timeval
timeout_set	event_compat.h	189;"	d
timeout_write	bufferevent_struct.h	/^	struct timeval timeout_write;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::timeval
type	dns_struct.h	/^	int type;$/;"	m	struct:evdns_server_question
type	http_struct.h	/^	enum evhttp_cmd_type type;$/;"	m	struct:evhttp_request	typeref:enum:evhttp_request::evhttp_cmd_type
unlock	thread.h	/^	int (*unlock)(unsigned mode, void *lock);$/;"	m	struct:evthread_lock_callbacks
uri	http_struct.h	/^	char *uri;			\/* uri after HTTP request was parsed *\/$/;"	m	struct:evhttp_request
uri	rpc_struct.h	/^	const char* uri;$/;"	m	struct:evrpc
uri_elems	http_struct.h	/^	struct evhttp_uri *uri_elems;	\/* uri elements *\/$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evhttp_uri
userdone	http_struct.h	/^	    userdone:1;			\/* the user has sent all data *\/$/;"	m	struct:evhttp_request
value	keyvalq_struct.h	/^	char *value;$/;"	m	struct:evkeyval
wait_condition	thread.h	/^	int (*wait_condition)(void *cond, void *lock,$/;"	m	struct:evthread_condition_callbacks
wm_read	bufferevent_struct.h	/^	struct event_watermark wm_read;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event_watermark
wm_write	bufferevent_struct.h	/^	struct event_watermark wm_write;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event_watermark
writecb	bufferevent_struct.h	/^	bufferevent_data_cb writecb;$/;"	m	struct:bufferevent
